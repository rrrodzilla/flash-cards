name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to deploy'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build production bundle
        run: pnpm build

      - name: Set tag name
        id: tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create deployment archive
        run: |
          cd dist
          tar -czf ../flashcards-${{ steps.tag.outputs.tag }}.tar.gz .
          cd ..

      - name: Upload release asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.tag.outputs.tag }} \
            flashcards-${{ steps.tag.outputs.tag }}.tar.gz \
            --clobber

      - name: Trigger deployment webhook
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          PAYLOAD="{
            \"action\": \"published\",
            \"release\": {
              \"tag_name\": \"${TAG}\",
              \"name\": \"Flash Cards ${TAG}\",
              \"html_url\": \"https://github.com/${{ github.repository }}/releases/tag/${TAG}\"
            },
            \"repository\": {
              \"full_name\": \"${{ github.repository }}\",
              \"clone_url\": \"https://github.com/${{ github.repository }}.git\"
            }
          }"
          SIGNATURE="sha256=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$WEBHOOK_SECRET" | sed 's/^.* //')"
          curl -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: release" \
            -H "X-Hub-Signature-256: $SIGNATURE" \
            -d "$PAYLOAD"
